/******** prototypes functions structure adherent **********/
void affiche(Livre unePers);
void obteni(char *pt);
void demande( Livre *ptr );
void lir(FILE *donnees, Livre *P);
void visualise( pointeus liste);
void creerLivre(pointeus *L);
void insere(pointeus *P, Livre uneLivre, pointeus avant);
void finder(int aChercher, pointeus list, pointeus *av, pointeus *cl);
void inverse( pointeus *L );
void cherche(pointeus liste);
void elimine( pointeus *P, pointeus avant, pointeus cestLui);
void supprime(pointeus *P);
void ajoute(pointeus *P);
void modifie(pointeus *P);
void traite( char choix, pointeus *L );
/******** prototypes functions structure adherent **********/
void affichers(Livre unePers);
void obtenirs(char *pt);
void demanders(Livre *ptr );
void lires(FILE * donnees, Livre *P);
void visualisers( pointeux liste);
void creerFIFOs(pointeux *L);
void inserers(pointeux *P, Livre unePers, pointeux avant);
void finds(int aChercher, pointeux liste, pointeux *av, pointeux *cl);
void inversers(pointeux *L);
void cherchers(pointeux liste);
void eliminers(pointeux *P, pointeux avant, pointeux cestLui);
void supprimer(pointeur * P);
void ajouter(pointeur * P);
void modifier(pointeur * P);
void traiter( char choix, pointeur * L );
void viderBuffer();
void viderBuffered(int n, char chaine[]);

